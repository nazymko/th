/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "connectors_send_headers", schema = "thehomeland")
public class ConnectorsSendHeaders implements Serializable {

	private static final long serialVersionUID = -617398190;

	private Integer id;
	private String  header;
	private String  value;
	private Integer consumerId;

	public ConnectorsSendHeaders() {}

	public ConnectorsSendHeaders(ConnectorsSendHeaders value) {
		this.id = value.id;
		this.header = value.header;
		this.value = value.value;
		this.consumerId = value.consumerId;
	}

	public ConnectorsSendHeaders(
		Integer id,
		String  header,
		String  value,
		Integer consumerId
	) {
		this.id = id;
		this.header = header;
		this.value = value;
		this.consumerId = consumerId;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "header", length = 128)
	@Size(max = 128)
	public String getHeader() {
		return this.header;
	}

	public void setHeader(String header) {
		this.header = header;
	}

	@Column(name = "value", length = 1024)
	@Size(max = 1024)
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Column(name = "consumer_id", precision = 10)
	public Integer getConsumerId() {
		return this.consumerId;
	}

	public void setConsumerId(Integer consumerId) {
		this.consumerId = consumerId;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("ConnectorsSendHeaders (");

		sb.append(id);
		sb.append(", ").append(header);
		sb.append(", ").append(value);
		sb.append(", ").append(consumerId);

		sb.append(")");
		return sb.toString();
	}
}
