/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.nazymko.th.parser.autodao.tables.AttributeData;
import org.nazymko.th.parser.autodao.tables.Page;
import org.nazymko.th.parser.autodao.tables.Rule;
import org.nazymko.th.parser.autodao.tables.Site;
import org.nazymko.th.parser.autodao.tables.TSchedule;
import org.nazymko.th.parser.autodao.tables.TTask;
import org.nazymko.th.parser.autodao.tables.records.AttributeDataRecord;
import org.nazymko.th.parser.autodao.tables.records.PageRecord;
import org.nazymko.th.parser.autodao.tables.records.RuleRecord;
import org.nazymko.th.parser.autodao.tables.records.SiteRecord;
import org.nazymko.th.parser.autodao.tables.records.TScheduleRecord;
import org.nazymko.th.parser.autodao.tables.records.TTaskRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>thehomeland</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<PageRecord, Integer> IDENTITY_PAGE = Identities0.IDENTITY_PAGE;
	public static final Identity<RuleRecord, Integer> IDENTITY_RULE = Identities0.IDENTITY_RULE;
	public static final Identity<SiteRecord, Integer> IDENTITY_SITE = Identities0.IDENTITY_SITE;
	public static final Identity<TScheduleRecord, Integer> IDENTITY_T_SCHEDULE = Identities0.IDENTITY_T_SCHEDULE;
	public static final Identity<TTaskRecord, Integer> IDENTITY_T_TASK = Identities0.IDENTITY_T_TASK;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<PageRecord> KEY_PAGE_PRIMARY = UniqueKeys0.KEY_PAGE_PRIMARY;
	public static final UniqueKey<RuleRecord> KEY_RULE_PRIMARY = UniqueKeys0.KEY_RULE_PRIMARY;
	public static final UniqueKey<RuleRecord> KEY_RULE_RULE_ID_UINDEX = UniqueKeys0.KEY_RULE_RULE_ID_UINDEX;
	public static final UniqueKey<SiteRecord> KEY_SITE_PRIMARY = UniqueKeys0.KEY_SITE_PRIMARY;
	public static final UniqueKey<SiteRecord> KEY_SITE_SITE_ID_UINDEX = UniqueKeys0.KEY_SITE_SITE_ID_UINDEX;
	public static final UniqueKey<TScheduleRecord> KEY_T_SCHEDULE_PRIMARY = UniqueKeys0.KEY_T_SCHEDULE_PRIMARY;
	public static final UniqueKey<TTaskRecord> KEY_T_TASK_PRIMARY = UniqueKeys0.KEY_T_TASK_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<AttributeDataRecord, RuleRecord> ATTRIBUTE_DATA_IBFK_1 = ForeignKeys0.ATTRIBUTE_DATA_IBFK_1;
	public static final ForeignKey<PageRecord, SiteRecord> PAGE_IBFK_1 = ForeignKeys0.PAGE_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<PageRecord, Integer> IDENTITY_PAGE = createIdentity(Page.PAGE, Page.PAGE.ID);
		public static Identity<RuleRecord, Integer> IDENTITY_RULE = createIdentity(Rule.RULE, Rule.RULE.ID);
		public static Identity<SiteRecord, Integer> IDENTITY_SITE = createIdentity(Site.SITE, Site.SITE.ID);
		public static Identity<TScheduleRecord, Integer> IDENTITY_T_SCHEDULE = createIdentity(TSchedule.T_SCHEDULE, TSchedule.T_SCHEDULE.ID);
		public static Identity<TTaskRecord, Integer> IDENTITY_T_TASK = createIdentity(TTask.T_TASK, TTask.T_TASK.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<PageRecord> KEY_PAGE_PRIMARY = createUniqueKey(Page.PAGE, Page.PAGE.ID);
		public static final UniqueKey<RuleRecord> KEY_RULE_PRIMARY = createUniqueKey(Rule.RULE, Rule.RULE.ID);
		public static final UniqueKey<RuleRecord> KEY_RULE_RULE_ID_UINDEX = createUniqueKey(Rule.RULE, Rule.RULE.ID);
		public static final UniqueKey<SiteRecord> KEY_SITE_PRIMARY = createUniqueKey(Site.SITE, Site.SITE.ID);
		public static final UniqueKey<SiteRecord> KEY_SITE_SITE_ID_UINDEX = createUniqueKey(Site.SITE, Site.SITE.ID);
		public static final UniqueKey<TScheduleRecord> KEY_T_SCHEDULE_PRIMARY = createUniqueKey(TSchedule.T_SCHEDULE, TSchedule.T_SCHEDULE.ID);
		public static final UniqueKey<TTaskRecord> KEY_T_TASK_PRIMARY = createUniqueKey(TTask.T_TASK, TTask.T_TASK.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<AttributeDataRecord, RuleRecord> ATTRIBUTE_DATA_IBFK_1 = createForeignKey(org.nazymko.th.parser.autodao.Keys.KEY_RULE_PRIMARY, AttributeData.ATTRIBUTE_DATA, AttributeData.ATTRIBUTE_DATA.RULE_ID);
		public static final ForeignKey<PageRecord, SiteRecord> PAGE_IBFK_1 = createForeignKey(org.nazymko.th.parser.autodao.Keys.KEY_SITE_PRIMARY, Page.PAGE, Page.PAGE.SITE_ID);
	}
}
