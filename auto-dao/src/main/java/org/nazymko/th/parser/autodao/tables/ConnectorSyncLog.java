/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.th.parser.autodao.Keys;
import org.nazymko.th.parser.autodao.Thehomeland;
import org.nazymko.th.parser.autodao.tables.records.ConnectorSyncLogRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.2"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ConnectorSyncLog extends TableImpl<ConnectorSyncLogRecord> {

    /**
     * The reference instance of <code>thehomeland.connector_sync_log</code>
     */
    public static final ConnectorSyncLog CONNECTOR_SYNC_LOG = new ConnectorSyncLog();
    private static final long serialVersionUID = 2006515515;
    /**
     * The column <code>thehomeland.connector_sync_log.page_id</code>.
     */
    public final TableField<ConnectorSyncLogRecord, Integer> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>thehomeland.connector_sync_log.consumer</code>.
     */
    public final TableField<ConnectorSyncLogRecord, String> CONSUMER = createField("consumer", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");
    /**
     * The column <code>thehomeland.connector_sync_log.time</code>.
     */
    public final TableField<ConnectorSyncLogRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");
    /**
     * The column <code>thehomeland.connector_sync_log.id</code>.
     */
    public final TableField<ConnectorSyncLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>thehomeland.connector_sync_log</code> table reference
     */
    public ConnectorSyncLog() {
        this("connector_sync_log", null);
    }

    /**
     * Create an aliased <code>thehomeland.connector_sync_log</code> table reference
     */
    public ConnectorSyncLog(String alias) {
        this(alias, CONNECTOR_SYNC_LOG);
    }

    private ConnectorSyncLog(String alias, Table<ConnectorSyncLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConnectorSyncLog(String alias, Table<ConnectorSyncLogRecord> aliased, Field<?>[] parameters) {
        super(alias, Thehomeland.THEHOMELAND, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConnectorSyncLogRecord> getRecordType() {
        return ConnectorSyncLogRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConnectorSyncLogRecord> getPrimaryKey() {
        return Keys.KEY_CONNECTOR_SYNC_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConnectorSyncLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ConnectorSyncLogRecord>>asList(Keys.KEY_CONNECTOR_SYNC_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorSyncLog as(String alias) {
        return new ConnectorSyncLog(alias, this);
    }

    /**
     * Rename this table
     */
    public ConnectorSyncLog rename(String name) {
        return new ConnectorSyncLog(name, null);
    }
}
