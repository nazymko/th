/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.7.2"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "th_page", schema = "thehomeland")
public class ThPage implements Serializable {

	private static final long serialVersionUID = -757743504;

	private Integer id;
	private String authority;
	private Integer siteId;
	private Timestamp visitedAt;
	private String type;
	private Integer version;
	private Timestamp registeredAt;
	private Integer sourcepage;
	private Integer taskRunId;
	private String pageUrl;

	public ThPage() {
	}

	public ThPage(ThPage value) {
		this.id = value.id;
		this.authority = value.authority;
		this.siteId = value.siteId;
		this.visitedAt = value.visitedAt;
		this.type = value.type;
		this.version = value.version;
		this.registeredAt = value.registeredAt;
		this.sourcepage = value.sourcepage;
		this.taskRunId = value.taskRunId;
		this.pageUrl = value.pageUrl;
	}

	public ThPage(
			Integer id,
			String authority,
			Integer siteId,
			Timestamp visitedAt,
			String type,
			Integer version,
			Timestamp registeredAt,
			Integer sourcepage,
			Integer taskRunId,
			String pageUrl
	) {
		this.id = id;
		this.authority = authority;
		this.siteId = siteId;
		this.visitedAt = visitedAt;
		this.type = type;
		this.version = version;
		this.registeredAt = registeredAt;
		this.sourcepage = sourcepage;
		this.taskRunId = taskRunId;
		this.pageUrl = pageUrl;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "authority", length = 512)
	@Size(max = 512)
	public String getAuthority() {
		return this.authority;
	}

	public void setAuthority(String authority) {
		this.authority = authority;
	}

	@Column(name = "site_id", precision = 10)
	public Integer getSiteId() {
		return this.siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	@Column(name = "visited_at")
	public Timestamp getVisitedAt() {
		return this.visitedAt;
	}

	public void setVisitedAt(Timestamp visitedAt) {
		this.visitedAt = visitedAt;
	}

	@Column(name = "type", length = 32)
	@Size(max = 32)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "version", nullable = false, precision = 10)
	@NotNull
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "registered_at")
	public Timestamp getRegisteredAt() {
		return this.registeredAt;
	}

	public void setRegisteredAt(Timestamp registeredAt) {
		this.registeredAt = registeredAt;
	}

	@Column(name = "sourcePage", nullable = false, precision = 10)
	@NotNull
	public Integer getSourcepage() {
		return this.sourcepage;
	}

	public void setSourcepage(Integer sourcepage) {
		this.sourcepage = sourcepage;
	}

	@Column(name = "task_run_id", nullable = false, precision = 10)
	@NotNull
	public Integer getTaskRunId() {
		return this.taskRunId;
	}

	public void setTaskRunId(Integer taskRunId) {
		this.taskRunId = taskRunId;
	}

	@Column(name = "page_url", nullable = false, length = 1024)
	@NotNull
	@Size(max = 1024)
	public String getPageUrl() {
		return this.pageUrl;
	}

	public void setPageUrl(String pageUrl) {
		this.pageUrl = pageUrl;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("ThPage (");

		sb.append(id);
		sb.append(", ").append(authority);
		sb.append(", ").append(siteId);
		sb.append(", ").append(visitedAt);
		sb.append(", ").append(type);
		sb.append(", ").append(version);
		sb.append(", ").append(registeredAt);
		sb.append(", ").append(sourcepage);
		sb.append(", ").append(taskRunId);
		sb.append(", ").append(pageUrl);

		sb.append(")");
		return sb.toString();
	}
}
