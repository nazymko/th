/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.th.parser.autodao.tables.ConnectorRules;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "connector_rules", schema = "thehomeland")
public class ConnectorRulesRecord extends UpdatableRecordImpl<ConnectorRulesRecord> implements Record4<Integer, String, Integer, Integer> {

	private static final long serialVersionUID = 2119240067;

	/**
	 * Setter for <code>thehomeland.connector_rules.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>thehomeland.connector_rules.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>thehomeland.connector_rules.rule</code>.
	 */
	public void setRule(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>thehomeland.connector_rules.rule</code>.
	 */
	@Column(name = "rule", length = 65535)
	@Size(max = 65535)
	public String getRule() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>thehomeland.connector_rules.consumer_id</code>.
	 */
	public void setConsumerId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>thehomeland.connector_rules.consumer_id</code>.
	 */
	@Column(name = "consumer_id", precision = 10)
	public Integer getConsumerId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>thehomeland.connector_rules.site_id</code>.
	 */
	public void setSiteId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>thehomeland.connector_rules.site_id</code>.
	 */
	@Column(name = "site_id", precision = 10)
	public Integer getSiteId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ConnectorRules.CONNECTOR_RULES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ConnectorRules.CONNECTOR_RULES.RULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return ConnectorRules.CONNECTOR_RULES.CONSUMER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return ConnectorRules.CONNECTOR_RULES.SITE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRule();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getConsumerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getSiteId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRulesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRulesRecord value2(String value) {
		setRule(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRulesRecord value3(Integer value) {
		setConsumerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRulesRecord value4(Integer value) {
		setSiteId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorRulesRecord values(Integer value1, String value2, Integer value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ConnectorRulesRecord
	 */
	public ConnectorRulesRecord() {
		super(ConnectorRules.CONNECTOR_RULES);
	}

	/**
	 * Create a detached, initialised ConnectorRulesRecord
	 */
	public ConnectorRulesRecord(Integer id, String rule, Integer consumerId, Integer siteId) {
		super(ConnectorRules.CONNECTOR_RULES);

		setValue(0, id);
		setValue(1, rule);
		setValue(2, consumerId);
		setValue(3, siteId);
	}
}
