/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.th.parser.autodao.Keys;
import org.nazymko.th.parser.autodao.Thehomeland;
import org.nazymko.th.parser.autodao.tables.records.ConnectorConsumerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorConsumer extends TableImpl<ConnectorConsumerRecord> {

	private static final long serialVersionUID = -1303533369;

	/**
	 * The reference instance of <code>thehomeland.connector_consumer</code>
	 */
	public static final ConnectorConsumer CONNECTOR_CONSUMER = new ConnectorConsumer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConnectorConsumerRecord> getRecordType() {
		return ConnectorConsumerRecord.class;
	}

	/**
	 * The column <code>thehomeland.connector_consumer.id</code>.
	 */
	public final TableField<ConnectorConsumerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>thehomeland.connector_consumer.domain</code>.
	 */
	public final TableField<ConnectorConsumerRecord, String> DOMAIN = createField("domain", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * The column <code>thehomeland.connector_consumer.time</code>.
	 */
	public final TableField<ConnectorConsumerRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>thehomeland.connector_consumer</code> table reference
	 */
	public ConnectorConsumer() {
		this("connector_consumer", null);
	}

	/**
	 * Create an aliased <code>thehomeland.connector_consumer</code> table reference
	 */
	public ConnectorConsumer(String alias) {
		this(alias, CONNECTOR_CONSUMER);
	}

	private ConnectorConsumer(String alias, Table<ConnectorConsumerRecord> aliased) {
		this(alias, aliased, null);
	}

	private ConnectorConsumer(String alias, Table<ConnectorConsumerRecord> aliased, Field<?>[] parameters) {
		super(alias, Thehomeland.THEHOMELAND, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ConnectorConsumerRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CONNECTOR_CONSUMER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ConnectorConsumerRecord> getPrimaryKey() {
		return Keys.KEY_CONNECTOR_CONSUMER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ConnectorConsumerRecord>> getKeys() {
		return Arrays.<UniqueKey<ConnectorConsumerRecord>>asList(Keys.KEY_CONNECTOR_CONSUMER_PRIMARY, Keys.KEY_CONNECTOR_CONSUMER_UNIQUE_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorConsumer as(String alias) {
		return new ConnectorConsumer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConnectorConsumer rename(String name) {
		return new ConnectorConsumer(name, null);
	}
}
