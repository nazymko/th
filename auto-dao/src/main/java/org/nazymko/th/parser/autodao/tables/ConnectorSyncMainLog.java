/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.th.parser.autodao.Keys;
import org.nazymko.th.parser.autodao.Thehomeland;
import org.nazymko.th.parser.autodao.tables.records.ConnectorSyncMainLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorSyncMainLog extends TableImpl<ConnectorSyncMainLogRecord> {

	private static final long serialVersionUID = -36896347;

	/**
	 * The reference instance of <code>thehomeland.connector_sync_main_log</code>
	 */
	public static final ConnectorSyncMainLog CONNECTOR_SYNC_MAIN_LOG = new ConnectorSyncMainLog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConnectorSyncMainLogRecord> getRecordType() {
		return ConnectorSyncMainLogRecord.class;
	}

	/**
	 * The column <code>thehomeland.connector_sync_main_log.id</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>thehomeland.connector_sync_main_log.consumer_id</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Integer> CONSUMER_ID = createField("consumer_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>thehomeland.connector_sync_main_log.sync_date</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Timestamp> SYNC_DATE = createField("sync_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>thehomeland.connector_sync_main_log.count_new</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Integer> COUNT_NEW = createField("count_new", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>thehomeland.connector_sync_main_log.count_total</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Integer> COUNT_TOTAL = createField("count_total", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>thehomeland.connector_sync_main_log.latest_page_id</code>.
	 */
	public final TableField<ConnectorSyncMainLogRecord, Long> LATEST_PAGE_ID = createField("latest_page_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>thehomeland.connector_sync_main_log</code> table reference
	 */
	public ConnectorSyncMainLog() {
		this("connector_sync_main_log", null);
	}

	/**
	 * Create an aliased <code>thehomeland.connector_sync_main_log</code> table reference
	 */
	public ConnectorSyncMainLog(String alias) {
		this(alias, CONNECTOR_SYNC_MAIN_LOG);
	}

	private ConnectorSyncMainLog(String alias, Table<ConnectorSyncMainLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private ConnectorSyncMainLog(String alias, Table<ConnectorSyncMainLogRecord> aliased, Field<?>[] parameters) {
		super(alias, Thehomeland.THEHOMELAND, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ConnectorSyncMainLogRecord> getPrimaryKey() {
		return Keys.KEY_CONNECTOR_SYNC_MAIN_LOG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ConnectorSyncMainLogRecord>> getKeys() {
		return Arrays.<UniqueKey<ConnectorSyncMainLogRecord>>asList(Keys.KEY_CONNECTOR_SYNC_MAIN_LOG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ConnectorSyncMainLogRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ConnectorSyncMainLogRecord, ?>>asList(Keys.CONNECTOR_SYNC_MAIN_LOG_IBFK_1, Keys.CONNECTOR_SYNC_MAIN_LOG_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectorSyncMainLog as(String alias) {
		return new ConnectorSyncMainLog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConnectorSyncMainLog rename(String name) {
		return new ConnectorSyncMainLog(name, null);
	}
}
