/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.nazymko.th.parser.autodao.Keys;
import org.nazymko.th.parser.autodao.Thehomeland;
import org.nazymko.th.parser.autodao.tables.records.TaskScheduleRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.7.2"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TaskSchedule extends TableImpl<TaskScheduleRecord> {

	/**
	 * The reference instance of <code>thehomeland.task_schedule</code>
	 */
	public static final TaskSchedule TASK_SCHEDULE = new TaskSchedule();
	private static final long serialVersionUID = -1598590663;
	/**
	 * The column <code>thehomeland.task_schedule.id</code>.
	 */
	public final TableField<TaskScheduleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
	/**
	 * The column <code>thehomeland.task_schedule.site_id</code>.
	 */
	public final TableField<TaskScheduleRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
	/**
	 * The column <code>thehomeland.task_schedule.start_page</code>.
	 */
	public final TableField<TaskScheduleRecord, String> START_PAGE = createField("start_page", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");
	/**
	 * The column <code>thehomeland.task_schedule.page_type</code>.
	 */
	public final TableField<TaskScheduleRecord, String> PAGE_TYPE = createField("page_type", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");
	/**
	 * The column <code>thehomeland.task_schedule.start_at</code>.
	 */
	public final TableField<TaskScheduleRecord, Timestamp> START_AT = createField("start_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");
	/**
	 * The column <code>thehomeland.task_schedule.cron</code>.
	 */
	public final TableField<TaskScheduleRecord, String> CRON = createField("cron", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");
	/**
	 * The column <code>thehomeland.task_schedule.is_enabled</code>.
	 */
	public final TableField<TaskScheduleRecord, Boolean> IS_ENABLED = createField("is_enabled", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>thehomeland.task_schedule</code> table reference
	 */
	public TaskSchedule() {
		this("task_schedule", null);
	}

	/**
	 * Create an aliased <code>thehomeland.task_schedule</code> table reference
	 */
	public TaskSchedule(String alias) {
		this(alias, TASK_SCHEDULE);
	}

	private TaskSchedule(String alias, Table<TaskScheduleRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskSchedule(String alias, Table<TaskScheduleRecord> aliased, Field<?>[] parameters) {
		super(alias, Thehomeland.THEHOMELAND, aliased, parameters, "");
	}

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskScheduleRecord> getRecordType() {
		return TaskScheduleRecord.class;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TaskScheduleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TASK_SCHEDULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskScheduleRecord> getPrimaryKey() {
		return Keys.KEY_TASK_SCHEDULE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskScheduleRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskScheduleRecord>>asList(Keys.KEY_TASK_SCHEDULE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TaskScheduleRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TaskScheduleRecord, ?>>asList(Keys.TASK_SCHEDULE_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskSchedule as(String alias) {
		return new TaskSchedule(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskSchedule rename(String name) {
		return new TaskSchedule(name, null);
	}
}
