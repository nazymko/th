/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.th.parser.autodao.tables.Rule;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleRecord extends UpdatableRecordImpl<RuleRecord> implements Record4<String, String, Integer, Integer> {

	private static final long serialVersionUID = -1052295321;

	/**
	 * Setter for <code>thehomeland.rule.site</code>.
	 */
	public void setSite(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>thehomeland.rule.site</code>.
	 */
	public String getSite() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>thehomeland.rule.rule</code>.
	 */
	public void setRule(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>thehomeland.rule.rule</code>.
	 */
	public String getRule() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>thehomeland.rule.version</code>.
	 */
	public void setVersion(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>thehomeland.rule.version</code>.
	 */
	public Integer getVersion() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>thehomeland.rule.id</code>.
	 */
	public void setId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>thehomeland.rule.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Rule.RULE.SITE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Rule.RULE.RULE_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Rule.RULE.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Rule.RULE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getSite();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRule();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RuleRecord value1(String value) {
		setSite(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RuleRecord value2(String value) {
		setRule(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RuleRecord value3(Integer value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RuleRecord value4(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RuleRecord values(String value1, String value2, Integer value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RuleRecord
	 */
	public RuleRecord() {
		super(Rule.RULE);
	}

	/**
	 * Create a detached, initialised RuleRecord
	 */
	public RuleRecord(String site, String rule, Integer version, Integer id) {
		super(Rule.RULE);

		setValue(0, site);
		setValue(1, rule);
		setValue(2, version);
		setValue(3, id);
	}
}
