/**
 * This class is generated by jOOQ
 */
package org.nazymko.th.parser.autodao.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.th.parser.autodao.Keys;
import org.nazymko.th.parser.autodao.Thehomeland;
import org.nazymko.th.parser.autodao.tables.records.ThConfigRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThConfig extends TableImpl<ThConfigRecord> {

	private static final long serialVersionUID = 1507581514;

	/**
	 * The reference instance of <code>thehomeland.th_config</code>
	 */
	public static final ThConfig TH_CONFIG = new ThConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ThConfigRecord> getRecordType() {
		return ThConfigRecord.class;
	}

	/**
	 * The column <code>thehomeland.th_config.id</code>.
	 */
	public final TableField<ThConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>thehomeland.th_config.name</code>.
	 */
	public final TableField<ThConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>thehomeland.th_config.value</code>.
	 */
	public final TableField<ThConfigRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>thehomeland.th_config</code> table reference
	 */
	public ThConfig() {
		this("th_config", null);
	}

	/**
	 * Create an aliased <code>thehomeland.th_config</code> table reference
	 */
	public ThConfig(String alias) {
		this(alias, TH_CONFIG);
	}

	private ThConfig(String alias, Table<ThConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private ThConfig(String alias, Table<ThConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Thehomeland.THEHOMELAND, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ThConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TH_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ThConfigRecord> getPrimaryKey() {
		return Keys.KEY_TH_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ThConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<ThConfigRecord>>asList(Keys.KEY_TH_CONFIG_PRIMARY, Keys.KEY_TH_CONFIG_TH_CONFIG_ID_UINDEX, Keys.KEY_TH_CONFIG_TH_CONFIG_NAME_UINDEX);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ThConfig as(String alias) {
		return new ThConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ThConfig rename(String name) {
		return new ThConfig(name, null);
	}
}
